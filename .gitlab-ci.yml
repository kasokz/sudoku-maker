stages:
  - install
  - test
  - build-image
  - retag
  - deploy

variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE
  IMAGE_TAG_STABLE: $IMAGE_TAG:stable
  npm_config_cache: "$CI_PROJECT_DIR/.npm"
  CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/cache/Cypress"

# cache using branch name
# https://gitlab.com/help/ci/caching/index.md
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .npm
    - cache/Cypress
    - node_modules

install:
  image: cypress/base:10
  stage: install
  script:
    - npm ci
    # check Cypress binary path and cached versions
    # useful to make sure we are not carrying around old versions
    - npx cypress cache path
    - npx cypress cache list

test:
  stage: test
  image: cypress/base:10
  allow_failure: false
  script:
    - npm run test
  artifacts:
    when: always
    paths:
      - cypress/videos/**/*.mp4
      - cypress/screenshots/**/*.png
    expire_in: 1 day

build-image:
  stage: build-image
  allow_failure: false
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - cd loaddriver-master
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $IMAGE_TAG:$CI_COMMIT_SHA --destination $IMAGE_TAG:latest

retag:
  stage: retag
  allow_failure: false
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  only:
    - master
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - echo "FROM $IMAGE_TAG:$CI_COMMIT_SHA" | /kaniko/executor --dockerfile /dev/stdin --destination $IMAGE_TAG_STABLE

deploy-prod:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  allow_failure: false
  when: manual
  only:
    - master
  script:
    - kubectl -n sudoku-maker set image deployment/sudoku-maker app=$IMAGE_TAG:$CI_COMMIT_SHA --record
